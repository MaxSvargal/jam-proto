package TownHall

import UnitObjEditing
import UnitIds
import ObjectIdGenerator
import ObjectIds
import ClosureTimers
import StandardTextTags

import UnitGroups

import TaxLaw
import IncreaseHarvestGold
import IncreaseHarvestLumber

import Worker
import Builder

public constant TOWN_HALL_ID = compiletime(UNIT_ID_GEN.next())

@compiletime function gen()
	new BuildingDefinition(TOWN_HALL_ID, UnitIds.townhall)
		..setName("|cffFF7B29 Town Hall")
		..setHotkey("T")
		..setTooltipBasic("|cffFFCC00Build |cffFF7B29TownHall [T]")
		..setTooltipExtended("Center of town and storage place")
		..setButtonPositionX(0)
		..setButtonPositionY(0)
		..setBuildTime(30)
		..setCollisionSize(MAX_COLLISION_SIZE)
		..setScalingValue(1.2)
		..setGoldCost(350)
		..setLumberCost(300)
		..setUnitsTrained(commaList(WORKER_ID, BUILDER_ID))
		..setResearchesAvailable(commaList(TAX_LAW_ID, INCREASE_HARVEST_GOLD_ID, INCREASE_HARVEST_LUMBER_ID))
		..setUpgradesTo("")

function decreaseGoldTextTag(int num, unit u, player forPlayer)
	let text = "-" + num.toString()
	let pos  = u.getPos() - vec2(16., 0.)
	standardTextTag(pos, text)
		..setColor(255, 220, 0, 255)
		..setVisibility(GetLocalPlayer() == forPlayer)

init
	doPeriodically(10) i ->
		for i = 0 to bj_MAX_PLAYER_SLOTS - 1
			let p = players[i]
			if p.isIngame()
				int count = 0
				for u in GetUnitsOfPlayerAll(p)
					if militaryUnits.has(u.getTypeId())
						count += u.getFoodUsed()
				
				p.subGold(count)
				let playerTown = GetUnitsOfPlayerAndTypeId(p, TOWN_HALL_ID).next()
				decreaseGoldTextTag(count, playerTown, p)
